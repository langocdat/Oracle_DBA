=============================================

Chuẩn bị:
  - Cài đặt oracle database trên cả 2 node
  - Primary Databae cần có database

=============================================

Step 1: Đặt hostname cho 2 node
  - (bash): hostnamectl set-hostname srv1.localdomain
  - (bash): hostnamectl set-hostname srv2.localdomain
    
Step 2: Sửa file /etc/hosts trên 2 node
  - (bash): vi /etc/hosts
    192.168.68.11 srv1.localdomain srv1
    192.168.68.12 srv2.localdomain srv2

=============================================
|             PRIMARY DATABASE              |
=============================================
Step 3: Archive log mode
  - (Sql): alter system set log_archive_dest_1='LOCATION=USE_DB_RECOVERY_FILE_DEST' scope=both;
  - (Sql): Select log_mode from v$database;
  - (Sql): archive log list;
-->> Set đường dẫn USE_DB_RECOVERY_FILE_DEST: https://github.com/langocdat/Oracle_DBA/blob/main/OracleDatabase/Parameter_FRA
  - Nếu chưa bật archive log mode thì off database -> khởi động mount và alter database archivelog;
        * (Sql): startup mount;
        * (Sql): alter database archivelog;
        * (Sql): alter database open;
Step 4: Mode Force Logging --> Bắt buộc mọi thao tác đều phải sinh ra redo log
  - (Sql): Select force_logging from v$database;
  - (Sql): alter database force logging;
Step 5: Standby redo log size:
  - (Sql): Select group#, thread#, bytes/1024/1024 mb from v$log;
  - (Sql): Select thread#, instance from v$thread;
-->> Tạo standby redo logs giống redo log groups về kích thước, số lượng+1
      - (Sql): alter database add standby logfile thread 1 size 200m;
      - (Sql): alter database add standby logfile thread 1 size 200m;
      - (Sql): alter database add standby logfile thread 1 size 200m;
      - (Sql): select group#, thread#, sequence#, bytes/1024/1024 mb, archived, status from v$standby_log;
               select member from v$logfile where type = 'STANDBY';
Step 6: Set log_archive_config
  - (Sql): alter system set log_archive_config='DG_CONFIG=(orcl, orclstd1)' scope=both;
  - (Sql): alter system set log_archive_dest_2='SERVICE=orclstd1 ASYNC VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=orclstd1' scope=both;
Step 7: Set fal_server --> standby tự động truy xuất archive log từ primary nếu phát hiện ra thiếu log trong quá trình apply redo
  - (Sql): show parameter fal_server;
  - (Sql): alter system set fal_server = 'orclstd1' scope=both;
        Set tham số trên standby
        ALTER SYSTEM SET FAL_SERVER='orcl'   SCOPE=BOTH;   -- trỏ về PRIMARY  
        ALTER SYSTEM SET FAL_CLIENT='orclstd1' SCOPE=BOTH; -- tên của chính standby
Step 8: Set standby_file_management: AUTO 
  - (Sql): show parameter standby_file_management
  - (Sql): alter system set standby_file_management='AUTO' scope=both;
      Explain: Khi bạn ADD DATAFILE, DROP DATAFILE hoặc ADD TEMPFILE ở primary, Oracle sẽ tự động thực hiện thao tác tương ứng trên standby trong lúc Managed Recovery đang chạy.
Step 9: enable flashback
  - (Sql): select flashback_on from v$database;
  - (Sql): alter database flashback on;
Step 10: Tắt firewall
  - (bash): systemctl stop firewalld.service
  - (bash): systemctl disable firewalld.service
Step 11: Bật đồng bộ thời gian
  - (bash): systemctl enable chronyd.service
  - (bash): systemctl restart chronyd.service
  - (bash): systemctl status chronyd
  - (bash): chronyc tracking
  - (bash): chronyc sources
  - (bash): chronyc -a 'burst 4/4'
  - (bash): chronyc -a makestep
Step 12: Add tnsnames.ora
- (bash): vi /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora
# tnsnames.ora Network Configuration File: /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora
# Generated by Oracle configuration tools.
orcl =
  (DESCRIPTION =
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCP)(HOST = srv1.localdomain)(PORT = 1521))
    )
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME = orcl_DGMGRL.localdomain)
    )
  )
orclstd1 =
  (DESCRIPTION =
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCP)(HOST = srv2.localdomain)(PORT = 1521))
    )
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME = orclstd1_DGMGRL.localdomain)
    )
  )
LISTENER_ORCL =
  (ADDRESS = (PROTOCOL = TCP)(HOST = srv1.localdomain)(PORT = 1521))
Step 13: Add listener
  - (bash): vi /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/listener.ora
# listener.ora Network Configuration File: /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/listener.ora
# Generated by Oracle configuration tools.
SID_LIST_LISTENER =
  (SID_LIST =
    (SID_DESC =
      (GLOBAL_DBNAME = orcl_DGMGRL.localdomain)
      (ORACLE_HOME = /u01/app/oracle/product/19.3.0/dbhome_1)
      (SID_NAME = orcl)
    )
  )
LISTENER =
  (DESCRIPTION_LIST =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = srv1.localdomain)(PORT = 1521))
    )
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))
    )
  )
ADR_BASE_LISTENER = /u01/app/oracle
    -------------
    lsnrctl start
    lsnrctl status
    lsnrctl reload

=============================================
|             STANDBY DATABASE              |
=============================================
Step 14: Tắt firewalld và bật đồng bộ thời gian, tạo file biến môi trường
Step 15: Khởi tạo db_name trong pfile
  - (Sql): echo 'DB_NAME=ORCL' > $ORACLE_HOME/dbs/initorclstd1.ora
Step 16: Copy password file từ priamry sang Standby và đổi tên
  - (bash): scp oracle@srv1:/u01/app/oracle/product/19.3.0/dbhome_1/dbs/orapworcl /u01/app/oracle/product/19.3.0/dbhome_1/dbs/orapworclstd1
Step 17: Copy tnsname.ora từ primary sang standby
  - (bash): scp oracle@srv1:/u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora
Step 18: Add listener
  - (bash): vi /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/listener.ora
            # listener.ora Network Configuration File: /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/listener.ora
            # Generated by Oracle configuration tools.
            SID_LIST_LISTENER =
              (SID_LIST =
                (SID_DESC =
                  (GLOBAL_DBNAME = orclstd1_DGMGRL.localdomain)
                  (ORACLE_HOME = /u01/app/oracle/product/19.3.0/dbhome_1)
                  (SID_NAME = stand)
                )
              )
            LISTENER =
              (DESCRIPTION_LIST =
                (DESCRIPTION =
                  (ADDRESS = (PROTOCOL = TCP)(HOST = srv2.localdomain)(PORT = 1521))
                )
                (DESCRIPTION =
                  (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))
                )
              )
            ADR_BASE_LISTENER = /u01/app/oracle
Step 19: Ping kiểm tra mạng
    ping srv1
    ping srv1.localdomain
    ping srv2
    ping srv2.localdomain
    tnsping orcl
    tnsping orclstd1
Step 20: Tạo folder
    mkdir -p /u01/app/oracle/admin/STAND/adump
    mkdir -p /u01/app/oracle/oradata
    mkdir -p /u01/app/oracle/fast_recovery_area

=============================================
|             DUPLICATE DATABASE            |
=============================================
Step 1: 
  - (Sql_Primary): rman target sys/oracle@orcl auxiliary sys/oracle@orclstd1
Step 2: duplicate
    DUPLICATE TARGET DATABASE FOR STANDBY FROM ACTIVE DATABASE DORECOVER
    SPFILE
    SET DB_UNIQUE_NAME 'orclstd1' COMMENT 'Is standby'
    SET LOG_ARCHIVE_DEST_2 'SERVICE=orcl ASYNC VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=orcl'
    SET AUDIT_FILE_DEST '/u01/app/oracle/admin/orclstd1/adump'
    SET CONTROL_FILES '/u01/app/oracle/oradata/orclstd1/controlfile/control01.ctl'
    SET FAL_SERVER 'orcl'
    NOFILENAMECHECK;

=============================================
|             APPLY REDO DATA               |
=============================================
  - (Sql_Standby): alter database recover managed standby database disconnect from session; -- Start redo apply
  - (Sql_Standby): alter database recover managed standby database cancel; -- Stop redo apply

-->> Check apply redo và switch logfile quá trình tạo log
  - (Sql_Primary): Select sequence#, first_time, next_time from v$archived_log order by sequence#;
  - (Sql_Primary): alter system switch logfile;
  - (Sql_Standby): Select sequence#, first_time, next_time, applied from v$archived_log order by sequence#;

=============================================
|            SWITCHOVER                     |
=============================================
  - (Sql_Primary): ALTER DATABASE SWITCHOVER TO ORCLSTD1; --Tiến trình redo apply phải đang run trên Standby.
  - (Sql_Primary): select database_role, switchover_status from v$database;
  - (Sql_Primary): Select status, gap_status from v$archive_dest_status where dest_id = 2; -- Kiểm tra gap

-->> Với lệnh Switchover thủ công, Standby old -> Primary new, primary chỉ nằm ở mức MOUNT, không tự OPEN.
Primary old -> Standby New, Standby off -> Cần MOUNT và run redo apply process.

=============================================
|        DUPLICATE FOR GRID/RAC             |
=============================================
DUPLICATE TARGET DATABASE 
  FOR STANDBY 
  FROM ACTIVE DATABASE 
  DORECOVER
  SPFILE
    SET DB_UNIQUE_NAME='orclstd1' COMMENT 'Is standby'
    SET FAL_SERVER='orcl'
    SET FAL_CLIENT='orclstd1'
    SET CONTROL_FILES='+DATA/ORCLSTD1/CONTROLFILE/control01.ctl'
    SET LOG_ARCHIVE_DEST_1='LOCATION=USE_DB_RECOVERY_FILE_DEST VALID_FOR=(ALL_LOGFILES,ALL_ROLES) DB_UNIQUE_NAME=orclstd1'
    SET LOG_ARCHIVE_DEST_2='SERVICE=orcl ASYNC VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=orcl'
    SET AUDIT_FILE_DEST='/u01/app/oracle/admin/orclstd1/adump'
    SET DB_FILE_NAME_CONVERT='+DATA/ORCL/','+DATA/ORCLSTD1/'
    SET LOG_FILE_NAME_CONVERT='+DATA/ORCL/','+DATA/ORCLSTD1/'
  NOFILENAMECHECK;

mkdir -p /u01/app/oracle/admin/orclstd1/adump
chown -R oracle:oinstall /u01/app/oracle/admin/orclstd1

